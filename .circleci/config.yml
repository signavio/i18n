version: 2.1

orbs:
  blackduck: signavio/blackduck@1.16.6

references:
  workspace_root: &workspace_root ~/repo

  dep_cache_key: &dep_cache_key deps2-{{ .Branch }}-{{ checksum "yarn.lock" }}
  dep_backup_cache_key: &dep_backup_cache_key deps2-{{ .Branch }}

  restore_deps: &restore_deps
    restore_cache:
      keys:
        - *dep_cache_key
        - *dep_backup_cache_key

  publish_test_results: &publish_test_results
    store_test_results:
      path: ./junit.xml

  store_test_results: &store_test_results
    store_artifacts:
      path: junit.xml
      prefix: tests

# define images as executor/not via 'reference' so that renovate will pick it 
# up for updates
executors:
  node:
    resource_class: medium+
    docker:
      # On Circle-CI We have to use a build images approved by SAP (for build compliance)
      # see https://wiki.one.int.sap/wiki/pages/viewpage.action?pageId=2650697023
      - image: node:22

jobs:
  build:
    executor: node
    working_directory: *workspace_root

    steps:
      - checkout

      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - *restore_deps

      - run: yarn install --frozen-lockfile

      - save_cache:
          key: *dep_cache_key
          paths:
            - node_modules

  black-duck-scan:
    docker:
      # blackduck requires node and java
      - image: cimg/node:lts-browsers

    working_directory: *workspace_root

    steps:
      - checkout

      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - run: yarn install --frozen-lockfile && yarn build
      - run: npm prune --production

      - blackduck/blackduck-detect:
          blackduck-project-group: SAP_Signavio_Process_Manager
          blackduck-project-name: i18n
          blackduck-project-path: "$HOME/repo"

  checkmarx-one-scan:
    docker:
      - image: checkmarx/ast-cli
    steps:
      - checkout
      - run:
          name: 'Run Scan'
          command: |
            /app/bin/cx \
            scan create \
            -s . \
            --agent CircleCI \
            --project-name signavio-i18n \
            --application-name SIGNAVIO_I18N \
            --branch master \
            --base-uri $CX_BASE_URI \
            --base-auth-uri $CX_BASE_AUTH_URI \
            --tenant $CX_TENANT \
            --client-id $CX_CLIENT_ID \
            --client-secret $CX_CLIENT_SECRET \
            --file-filter '!**/yarn.lock' \

  test:
    executor: node

    working_directory: *workspace_root

    steps:
      - checkout

      - *restore_deps

      - run: yarn coverage --ci
      - run:
          name: Sonar scan
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
                PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | sed -E "s/.+\/([0-9]+)$/\1/g")
                SONAR_ARGS="\
                  sonar.pullrequest.key=${PR_NUMBER} \
                  sonar.pullrequest.branch=${CIRCLE_BRANCH} \
                  sonar.pullrequest.base=master"
              else
                SONAR_ARGS="\
                  sonar.branch.name=${CIRCLE_BRANCH}"
              fi

            node analyse.js $SONAR_ARGS

      - *publish_test_results
      - *store_test_results

  lint:
    executor: node

    working_directory: *workspace_root

    steps:
      - checkout

      - *restore_deps

      - run: yarn lint

  flow:
    executor: node

    working_directory: *workspace_root

    steps:
      - checkout

      - *restore_deps

      - run: yarn flow

workflows:
  version: 2
  build_and_test:
    jobs:
      - build

      - test:
          context: SonarQubeSAP
          requires:
            - build
      - lint:
          requires:
            - build

      - flow:
          requires:
            - build

  blackduck-nightly-scan:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only: master
    jobs:
      - black-duck-scan:
          context: BlackDuck

  checkmarx:
    jobs:
      - checkmarx-one-scan:
          filters:
            branches:
              only:
                - master
          context:
            - checkmarx-one

  checkmarx-weekly:
    triggers:
      - schedule:
          cron: '0 0 * * 0'
          filters:
            branches:
              only:
                - master
    jobs:
      - checkmarx-one-scan:
          context:
            - checkmarx-one
